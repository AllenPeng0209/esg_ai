services:
  # Frontend service
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=${REACT_APP_API_URL}
        - REACT_APP_SUPABASE_URL=${REACT_APP_SUPABASE_URL}
        - REACT_APP_SUPABASE_ANON_KEY=${REACT_APP_SUPABASE_ANON_KEY}
        - NODE_ENV=${NODE_ENV}
    container_name: esg_ai_frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=${NODE_ENV}
      - REACT_APP_API_URL=${REACT_APP_API_URL}
      - REACT_APP_SUPABASE_URL=${REACT_APP_SUPABASE_URL}
      - REACT_APP_SUPABASE_ANON_KEY=${REACT_APP_SUPABASE_ANON_KEY}
      - CI=true
      - DISABLE_ESLINT_PLUGIN=true
    volumes:
      - ./frontend:/app
      - ./frontend/node_modules:/app/node_modules
    networks:
      - esg_ai_network
    depends_on:
      - backend

  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: esg_ai_backend
    env_file: .env
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - BACKEND_CORS_ORIGINS=["*"]
      - API_V1_STR=/api/v1
      - PROJECT_NAME=ESG AI Platform
      - ACCESS_TOKEN_EXPIRE_MINUTES=10080
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - SECRET_KEY=${SECRET_KEY}
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    networks:
      - esg_ai_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    tty: true
    stdin_open: true

networks:
  esg_ai_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1

volumes:
  postgres_data:
